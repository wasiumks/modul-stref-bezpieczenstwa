package com.maciejwasiak.locon.controller;

import com.maciejwasiak.locon.model.User;
import jakarta.servlet.http.HttpSession;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;
import java.util.Map;

@Controller
public class ZonesController {

    @GetMapping("/zones")
    public String zones(Model model, HttpSession session) {
        // Get user from session
        User user = (User) session.getAttribute("user");
        System.out.println("=== ZONES CONTROLLER ===");
        System.out.println("Session ID: " + session.getId());
        System.out.println("User in session: " + (user != null ? user.getPhone() + " - " + user.getRole() : "null"));
        System.out.println("All session attributes: " + java.util.Collections.list(session.getAttributeNames()));
        
        if (user == null) {
            System.out.println("No user in session, redirecting to login");
            return "redirect:/auth/login";
        }
        
        // For Phase 5.2 - Show sample zones for list view demonstration
        List<Map<String, Object>> zones = List.of(
                Map.of(
                        "id", 1,
                        "name", "Dom",
                        "address", "ul. Przyk≈Çadowa 123, Warszawa",
                        "icon", "home",
                        "devicesCount", 2,
                        "radius", 500,
                        "devices", List.of("iPhone 13", "Apple Watch")
                ),
                Map.of(
                        "id", 2,
                        "name", "Szko≈Ça",
                        "address", "ul. Szkolna 45, Warszawa",
                        "icon", "school",
                        "devicesCount", 1,
                        "radius", 300,
                        "devices", List.of("Samsung Galaxy")
                ),
                Map.of(
                        "id", 3,
                        "name", "Praca",
                        "address", "ul. Biurowa 78, Warszawa",
                        "icon", "work",
                        "devicesCount", 1,
                        "radius", 200,
                        "devices", List.of("iPhone 13")
                )
        );

        model.addAttribute("pageTitle", "Strefy Bezpiecze≈Ñstwa");
        model.addAttribute("pageDescription", "ZarzƒÖdzaj strefami bezpiecze≈Ñstwa dla swoich bliskich");
        model.addAttribute("zones", zones);
        model.addAttribute("hasZones", !zones.isEmpty());
        model.addAttribute("user", user);

        return "zones";
    }

    @GetMapping("/zones/wizard")
    public String zoneWizard(@RequestParam(defaultValue = "0") int step, Model model, HttpSession session) {
        // Get user from session
        User user = (User) session.getAttribute("user");
        
        if (user == null) {
            return "redirect:/auth/login";
        }

        // Wizard steps configuration
        List<Map<String, String>> wizardSteps = List.of(
                Map.of("title", "Nazwa i ikona", "description", "Wybierz nazwƒô i ikonƒô strefy"),
                Map.of("title", "Lokalizacja", "description", "Ustaw lokalizacjƒô strefy"),
                Map.of("title", "Promie≈Ñ", "description", "Okre≈õl promie≈Ñ strefy"),
                Map.of("title", "Powiadomienia", "description", "Wybierz urzƒÖdzenia do powiadomie≈Ñ")
        );

        // Available icons
        List<Map<String, String>> availableIcons = List.of(
                Map.of("name", "home", "emoji", "üè†", "label", "Dom"),
                Map.of("name", "school", "emoji", "üè´", "label", "Szko≈Ça"),
                Map.of("name", "work", "emoji", "üè¢", "label", "Praca"),
                Map.of("name", "hospital", "emoji", "üè•", "label", "Szpital"),
                Map.of("name", "gym", "emoji", "üí™", "label", "Si≈Çownia"),
                Map.of("name", "park", "emoji", "üå≥", "label", "Park"),
                Map.of("name", "shop", "emoji", "üõí", "label", "Sklep"),
                Map.of("name", "restaurant", "emoji", "üçΩÔ∏è", "label", "Restauracja")
        );

        // Mock user devices
        List<Map<String, Object>> userDevices = List.of(
                Map.of("id", 1, "name", "iPhone 13", "type", "Telefon"),
                Map.of("id", 2, "name", "Apple Watch", "type", "Smartwatch"),
                Map.of("id", 3, "name", "Samsung Galaxy", "type", "Telefon")
        );

        model.addAttribute("pageTitle", "Kreator strefy");
        model.addAttribute("currentStep", step);
        model.addAttribute("wizardSteps", wizardSteps);
        model.addAttribute("availableIcons", availableIcons);
        model.addAttribute("userDevices", userDevices);
        model.addAttribute("user", user);

        return "zone-wizard";
    }
}
